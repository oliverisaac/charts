apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "cronjob.fullname" . }}
  labels:
    app: {{ include "cronjob.name" . }}
    chart: {{ include "cronjob.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.runAt }}"
  concurrencyPolicy: Forbid
  restartPolicy: "Never"
  jobTemplate:
    spec:
      restartPolicy: "Never"
      template:
        metadata:
          labels:
            app: {{ include "cronjob.name" . }}
            release: {{ .Release.Name }}
        spec:
          restartPolicy: Never
          containers:
{{- if .Values.sidecars }}
{{ toYaml .Values.sidecars | indent 10 }}
{{- end }}
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            command:
{{ toYaml .Values.command | indent 12 }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- if .Values.resources }}
            resources:
{{ toYaml .Values.resources | indent 14 }}
            {{- end }}
            {{- if .Values.env }}
            env:
{{ toYaml .Values.env | indent 12 }}
            {{- end }}
            volumeMounts:
              - name: data-pvc
                mountPath: /data
              {{- if .Values.emptyDirs }}
              {{- range $ed := .Values.emptyDirs }}
              - name: {{ $ed.name }}
                mountPath: {{ $ed.path }}
              {{- end }}
              {{- end }}
              {{- if .Values.configMaps }}
              {{- range $cm := .Values.configMaps }}
              - name: {{ $cm.name }}
                mountPath: {{ $cm.path }}
              {{- end }}
              {{- end }}
              {{- if .Values.secrets }}
              {{- range $s := .Values.secrets }}
              - name: {{ $s.name }}
                mountPath: {{ $s.path }}
              {{- end }}
              {{- end }}
          volumes:
            - name: data-pvc
              persistentVolumeClaim:
                claimName: {{ include "cronjob.fullname" . }}-data
            {{- if .Values.emptyDirs }}
            {{- range $ed := .Values.emptyDirs }}
            - name: {{ $ed.name }}
              emptyDir: {}
            {{- end }}
            {{- end }}
            {{- if .Values.configMaps }}
            {{- range $cm := .Values.configMaps }}
            - name: {{ $cm.name }}
              configMap:
                name: {{ $cm.name }}
            {{- end }}
            {{- end }}
            {{- if .Values.secrets }}
            {{- range $s := .Values.secrets }}
            - name: {{ $s.name }}
              secret:
                secretName: {{ $s.name }}
            {{- end }}
            {{- end }}
